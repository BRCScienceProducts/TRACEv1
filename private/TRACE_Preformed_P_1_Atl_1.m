function [Y,Xf,Af] = TRACE_Preformed_P_1_Atl_1(X,~,~)
%TRACE_PREFORMED_P_1_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:38.
% 
% [Y] = TRACE_Preformed_P_1_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999961923064171;-0.999961923064171;-39.5;0;30.0316562652588;-2.96613502502441];
x1_step1.gain = [1.00003807838574;1.00003807838574;0.0155038759689922;0.000363636363636364;0.207805673664695;0.0607333297500273];
x1_step1.ymin = -1;

% Layer 1
b1 = [17.467769367779300893;3.9871241681685374303;7.1352639251598803938;0.69077736402759493117;1.7692310592192996843;-17.746053815128384201;0.74057935201655433755;6.7648923173726300817;-0.45999097692851281804;-6.5203653051768197813;-1.187091850068370702;0.29787929985579714165;-2.2060681663746350978;-17.365148707049254284;-12.386935073908491134;-5.5017205400098756485;0.74471937749015026942;-9.0684985911212407927;6.6938676012372368973;0.76706094378685707458];
IW1_1 = [-11.270611307042990745 1.6483291279629579407 6.4673637836999295914 -21.09723687145509885 -8.6270613557730744247 -22.197574922990632729;-2.0218113922639497915 1.2716312278469004138 3.0226274270528588062 -1.814620440775117638 0.60541849271047065706 -4.0078308348430482511;-1.2271808604686691435 3.1954584725259449485 5.3196090486553568866 0.74849642329456356205 -6.0263003994513271167 4.5906351141359831303;-0.14110082409719817975 0.2034078958332143916 -2.4080748034512415856 -0.23249604381242588991 1.2519710299354780414 1.8441258196159100446;0.24086565340518653611 -0.02852419554976494756 0.78159084043582305323 -0.53665644894524500152 1.0446969404754553601 0.67900408958526148329;1.1659728651737961691 0.73053782536678169013 0.16634125440161476317 -16.573635569680845947 -2.2916922025269039764 -0.38792798401213779425;0.16694965365200148399 0.50492196499864971937 -1.9524124375613129967 -0.7914292238913926969 0.31405412466668819471 1.1785530294173904853;-3.5101340218079815081 -0.18792692501965357899 -8.3612328285036969788 -0.044413583129204112221 -1.5755968133089357508 -4.9320129517887236759;0.65977568878826464704 1.6782651914353619027 -2.0468466327779677449 1.012331868054902273 -2.0276979248223381269 -1.0233502017105635673;-0.47670240377354078376 -0.00659897669220325684 6.6222213516772638897 -0.037809394496614814885 -1.9300912867548527529 -1.2128000755527463816;3.2005436302237133539 1.0030223751606912597 -1.7572173382549081122 2.0909107491724836514 1.609909234928229127 1.5110256964852353256;-0.82317919005929585108 1.0405566618020374303 0.34264665258576820772 -3.009764573589838399 -3.729792846180336241 4.2868025740777166988;-0.49958388400716774447 0.54372932962899256371 -2.1448332014875117757 -0.95586337849898628249 -4.6404374002815860223 -1.4919501029230981537;1.055262054691839646 0.63791763511620391824 0.16732365769256077326 -16.249410658431770571 -2.3178304525640052169 -0.36308037562085732075;0.14127944993989580147 1.3700174477445090648 -1.0009016229279685817 -15.376478454527800821 -3.9690979134996164923 5.1555929881094790801;0.58063060309689051852 -0.66957132687626130796 -2.9787641442591619168 -4.2923107949107288661 -1.2364303128410853994 0.2353300883473898597;-0.16323318993273722155 0.26061645608001238195 -2.095217369382381456 -0.19374570068358998309 1.1991561771253413937 1.761127878190019036;-0.9097761007883904405 -0.30930890423323315064 6.9280805488833765438 -1.1562490397948366194 4.1953822452874538484 -2.9855335362357733331;-0.18429158338343895607 -2.3478453148779787618 -2.8714521536828541137 -7.4509739194056034961 -1.0163530385449486282 -0.99768603286324974988;0.1042575878318230953 0.43266788042783910218 -1.7919526793743743021 -0.66210005887427869631 0.50587347466394394502 1.2336158823226408554];

% Layer 2
b2 = 1.2519699090248628259;
LW2_1 = [-0.21927473750804554742 0.25981717979530266627 0.12596608762275809945 4.9885480524979701755 -1.7154154162844044151 3.0756018176031592049 -3.6851098288800994141 0.05657384651181834867 -0.13374431007107986935 0.20107143054808912508 0.093629252996254672126 -0.097413082400312975273 0.3264933128494628134 -3.4181788173731812996 -0.090797967122009132224 0.33622169694602010992 -6.3730920314999792708 -0.1863285107598608159 -0.066969536905400833815 4.8659202962880856447];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.965459001831992;
y1_step1.xoffset = -0.121618166565895;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
