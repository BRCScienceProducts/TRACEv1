function [Y,Xf,Af] = TRACE_EstT_Temperature_1_Other_1(X,~,~)
%TRACE_ESTT_TEMPERATURE_1_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:41.
% 
% [Y] = TRACE_EstT_Temperature_1_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999961923064171;-0.999961923064171;-77.5;0;30.0081539154053];
x1_step1.gain = [1.00003807838574;1.00003807838574;0.0119760479041916;0.000363636363636364;0.213330946207267];
x1_step1.ymin = -1;

% Layer 1
b1 = [-189.90008717979057451;-0.98173165949619867199;-17.367154457836498693;4.5540833472579693719;0.38461243143385898113;-25.129084036430505478;-1.8058346475343198811;1.2081810580444662939;-1.4628176986664862547;-10.122212316898117734;0.59599884866945540551;7.439846379690285616;0.37983240195410034046;3.4821749272831343802;-0.59847689571582618484;1.6527099290327360581;0.58167954839971092174;-12.30341243929713535;-3.4770502024119052109;7.38154530337344017];
IW1_1 = [-4.6515307567056565219 4.9136111066778074274 -71.393643170578940271 -265.54402294063743284 102.99379184802812404;0.15651504820052508649 0.98581705984344925042 -0.36208468521856340683 -1.0882000986734676751 4.6897912358780757813;10.551252220657827863 6.0879244102432430452 -4.1239154708482503864 -7.2040863130612029508 37.985729900809559467;8.0181379390156060083 4.7345889397486171646 1.9213954795170331558 -4.3418338652435295444 60.054375360137449036;-2.0991391679160411599 0.17309108131338171721 -2.8617714227676325223 -0.63477845432348722898 3.7808824306756632083;-0.62392780514815771031 -26.501571067755726574 -15.006803412099136708 -38.289778650141784055 13.006280085613388664;3.5659733726852196334 1.4569928876954427732 -1.1579482436865478068 -1.1129760463525988357 -7.3177042075769449525;0.40227849260988823854 -0.61188807294754044008 0.99780808831794676195 0.28455574910909325892 1.0145052395163733916;0.065213321343146044007 0.032972607703500848852 -1.4927516295389062773 0.034849117707031446178 -0.33073951480185076468;11.342267305224103424 -11.209972832926618835 0.088855312988972159904 7.3268846135920080442 2.8667415877384945233;-0.062003158484076087431 -0.035299814896908789097 1.2156469940571370536 0.34682721931507232149 0.36817450665817885724;0.091558011014271398209 -0.18648362810902199826 -2.1135081529356956054 8.5549820246694672221 1.042297711284700279;-2.0995455918078893554 0.18291491156132189122 -2.8595953429454326056 -0.67346921964257322468 3.8088003430128081206;-2.1697849972317229117 -4.1312681218868352317 4.0195872190595665074 1.3028263918974336555 17.939465353888191856;0.063866218585780759609 0.037817058910750524225 -1.109665789829561211 -0.49814927701008743233 -0.37994570124917015352;-0.077793845200845992971 -0.035729235019996426204 1.7157353342332894997 -0.0072204781911426570498 0.37740010787406408355;-0.06961976741765588117 -0.039586771218878720469 1.0504193130385872657 0.63011364516637258237 0.41357109698164179479;-0.0080703741735883658542 0.05821746023548982768 0.16450809073535316296 -11.684966867924909906 -0.88342366661184212884;-2.5380652112581465474 1.4715201226589849082 0.53574782229294937164 2.3721754103906658173 -49.471200359638672239;0.092128005080696850904 -0.18452439461471326076 -2.1274722706453630394 8.46653525528520845 1.0428043159585402844];

% Layer 2
b2 = 9.4481629629569532369;
LW2_1 = [-0.020622113227694791049 0.27053190277909189287 -0.031958533289004130429 -0.022519649891901361016 4.7742387360316218547 0.0092971906000013232463 -0.07006860324136775231 0.75002576632609463392 90.695242829862593226 0.05258221882681132775 87.307906139945430368 13.991311822998779846 -4.8152334486540429026 0.02696501736548255132 152.5212577758319128 75.915809423044720461 69.787543326068856686 0.85703832854678108077 0.04863679205476605788 -14.264631114081936403];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0530989193133871;
y1_step1.xoffset = -2.99982047080994;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
