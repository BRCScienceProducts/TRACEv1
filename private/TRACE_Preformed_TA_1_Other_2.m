function [Y,Xf,Af] = TRACE_Preformed_TA_1_Other_2(X,~,~)
%TRACE_PREFORMED_TA_1_OTHER_2 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:40.
% 
% [Y] = TRACE_Preformed_TA_1_Other_2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999961923064171;-0.999961923064171;-77.5;0;30.1649227142334;-2.9811577796936];
x1_step1.gain = [1.00003807838574;1.00003807838574;0.0119760479041916;0.000363636363636364;0.22152510192902;0.0532708976942295];
x1_step1.ymin = -1;

% Layer 1
b1 = [6.2136430590644566863;-3.5097453583715800818;1.8965658601494794766;-4.9967713025314912656;-0.25626720746281145269;1.2094785877107738781;2.8960240504701317832;-0.41846138867846843779;0.14666878483166106983;2.5869049891953310727];
IW1_1 = [0.70867620337796211061 -1.865789008723817588 -1.640340828973475773 1.7217109784121769067 -6.9848327638440714793 3.4592502774494797713;0.16262848772284299592 0.039041296309794484842 -1.9570020928917599701 0.043228213035716223089 9.3712575841543444 -1.1402560429935857389;-0.47710137547250042189 -0.14643941300762836066 -1.8053272920784919631 0.78035103537108818639 0.26139832504695137416 1.2214971221870516427;0.074589551198781189889 0.01892490093882652144 -3.2061181640746037047 2.1724670388967517454 7.9357602291035478359 -5.1716573124781781701;-0.52811434705290194458 -0.67509309582139331862 0.8683445841862453829 -0.33733521459806525833 -3.2052424143836097947 0.61862944656311025238;1.4002236073986529252 1.2992562405681997717 -2.2741643962104491905 -0.46473733943260009394 -0.45789377763619237838 1.3989274443914043733;-0.088384592568348352426 -0.0030822277763869437676 1.325576095145302391 -0.051285309596652131625 -2.718594210705092884 1.9973608340903024061;0.048665322354873509492 -0.065629994397065044565 0.18175520318619253768 -0.53845200403124948707 0.61777626384730999209 0.92848663440067946695;0.01499181055498117858 0.081168344356070815104 -0.14683138161394754251 0.2629085805309120949 1.4029034243083886579 -1.0140186990694315394;-0.11318668066000692196 -0.027398543536702141959 -1.9751796810825481554 1.3576972140258394273 -0.49033436757416221097 1.8113421171104440166];

% Layer 2
b2 = [6.9222281363238558072;-19.232006907680315067;2.6822123040268213146;-0.055801406485106092026;-0.76639560924703065137;-4.4420417075333746837;12.319783121431697737;-1.4812382468491516185;-0.53679313059126065877;-0.38500973816332573207];
LW2_1 = [0.65606097245438355081 -0.033800436633562344624 3.7064208388147279472 -1.5293993303866648681 0.8130647128583587957 -3.4919299039792259798 -2.2473413263069481616 -3.2931065888878134906 0.52224262979791991057 -1.4519444228977465006;4.3092514229547775884 -4.8063944266750464607 -6.5682083513755351589 -0.99162459447188833206 4.2842739780120986381 11.677512540859682488 -4.2748906772465558035 3.0268718513966907935 5.6060273951373646995 6.7208160256280766731;-2.3750530318767957283 0.21715764142550558757 9.1703566909111273731 -1.6173066559445463675 0.35901946962888436898 0.84553165164183341496 -6.0330198036536071271 4.1168168377108305123 2.030005162919847006 -7.9213260667969516149;1.6231503114418950329 0.93794496912362490537 -2.5483393283182160793 0.96834789679764998738 0.064668544148169693209 -0.21081703031391865744 3.8832157661630444245 1.0181923764638167729 2.687396206012564015 2.2165845751452968315;0.18469204412817633032 -2.6760627416795719213 -0.90739475137281910833 2.4832448418619006425 0.44776745114003418946 0.36901485560059321678 1.4525549146305547499 -2.2527926827248725417 -2.3887368457636828367 0.96862895235194457211;-0.94886166172104036143 -3.8744102732565952607 -0.79212235014183063342 -0.098731061931962349476 0.15180372882088918884 -0.013835108196759923066 -3.4764340957455681647 1.5802586598110535121 1.2794282637657268253 4.9288580339172511913;1.5878607463687772761 9.1110269760692847996 -1.8960223749976681251 0.26937251947136270358 -1.9162039378067179385 -0.62143235246307582109 -0.49753666017367459418 -2.2545886848438794203 -9.6615406151020337688 1.2744295624766677211;-0.64637952601213288784 -0.97522125107737733796 -0.029816455060425850476 0.049916988687603774943 0.82995766798823589205 -0.26496365340516175868 1.2460866485747048582 2.0981480715247373681 3.4424910252271048172 -0.126278759110797556;-0.92267847207077846594 -0.51456606687312689274 -0.044724109678116491517 -0.011370862122762226409 1.9390138956794720215 -0.077308454685756519686 0.021702126596270899378 0.71030801814002098027 3.3537568060842857243 0.039965542325750946784;-0.078715498504114050915 2.2096304630218077669 -0.57234063286653846792 -4.5695942586581592693 -0.68975224586242345204 0.10496269250245712779 -4.3227416232102875426 -1.658195619372224483 -2.056708678691535841 -2.5069483022890448609];

% Layer 3
b3 = -0.65929986830123543662;
LW3_2 = [-2.0293770427077721941 0.24654321471647727693 0.19744381059175022952 3.1158450060340872056 -0.070704019088927608228 0.15872759584905921093 -0.048188888570619550777 0.1256336667459835299 -0.089476657251785274294 -0.063461854413015370002];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00351113753226865;
y1_step1.xoffset = 2059.216796875;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
