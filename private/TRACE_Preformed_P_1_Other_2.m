function [Y,Xf,Af] = TRACE_Preformed_P_1_Other_2(X,~,~)
%TRACE_PREFORMED_P_1_OTHER_2 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:38.
% 
% [Y] = TRACE_Preformed_P_1_Other_2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999961923064171;-0.999961923064171;-77.5;0;30.1649227142334;-2.9811577796936];
x1_step1.gain = [1.00003807838574;1.00003807838574;0.0119760479041916;0.000363636363636364;0.22152510192902;0.0532708976942295];
x1_step1.ymin = -1;

% Layer 1
b1 = [-3.1856693330671821407;1.1631319654993201862;-0.44753852302302504773;0.12977325113235008147;1.6171708577141734597;2.7489987046498574053;-2.6682782425081716937;-1.0037852805683591395;1.4639906583325117406;3.416876016309673858];
IW1_1 = [1.4473965427162465147 1.2922532400491077986 2.3637947516501172096 -1.0174597295312042267 0.63487703613163615213 -0.038629488038547078743;-0.95368126091839289238 0.55978090148118364588 -1.5482177112988055878 0.13694029489448319992 -2.8119466440387586026 0.44860197634476883799;-0.17687846606573082164 -0.21594597852757371759 -0.19613563405697151398 0.24148139018283307222 2.1734563347131468092 -0.80567928574532621244;0.30863647702975266496 0.15817674220334604351 -1.990149440590442742 0.66776810228237237776 1.3838121197220651926 1.1435829054736965649;0.31216335233355929635 0.41984562926348356626 1.2796053419038577736 2.6540223991608566934 1.317765718913912254 -1.7784775929541560835;0.32131878040282413345 -0.38194100823571919268 -2.6500176136941866467 0.53640580431367101966 0.15213600079149164346 -0.068333120368962538271;-0.236222759746280625 -0.10614910758622103648 -0.55943919312335488314 -3.2667568420457859801 -1.9338988865811101991 2.3310689299392910456;-0.28653033488960583108 -0.29805126652233437934 0.39798932302294792729 0.27862259800289113088 1.350860240105995258 -1.3840442239965489168;0.14238269708148765247 0.18594461203116197101 0.61804994078329089646 -0.28498898704416986138 -0.44600884506930904561 1.9839251087955518393;0.48636461531155011917 0.31270845095073607212 0.42753743197790811115 1.979535775595708369 4.3824198960984306339 -0.04649784861142658432];

% Layer 2
b2 = [-12.452788598285161825;17.245184804276497914;4.3443461530920197688;-1.1749975950851918594;1.7060863898140981032;27.481068422378665872;-1.3669641927185263164;1.0763307812277034259;-1.1385530844813431806;-4.0604988316631445144];
LW2_1 = [1.7422183213451769568 2.9091566748329902303 -5.4542385613694417401 -1.2867829970025694841 5.7002790390171229618 2.4149412450763430016 5.1924154194154121811 8.0662489898084661633 11.477987803446996651 0.67345398032501491148;-1.8790913322249425121 -0.14974250752615830828 -1.5180796594079442041 0.29037460177994117716 1.5788935545697935225 -13.272401234679668036 -0.24209554153818604871 3.6252994613224767129 0.94128428128913821382 -2.5513034482195307007;-0.0081059922183129660272 0.91290856986032675735 0.57184397814144960481 -0.32146976703171287193 -0.066513276671998800005 -2.7037951565023483624 0.36969663667221519532 -1.1284565392377612358 -0.2443091913808228266 -2.1826282656728999143;1.6504169217610933362 -0.065870924976868000522 -0.32861072816887482162 -0.039323523192699008644 0.32985184019982810577 1.2802190380483435828 1.9504113316277122969 -2.5116210332552082463 -4.1652637252588293748 0.91090709753275156402;0.18899427900998669316 -1.5543591433496302123 -2.9010873568297186331 0.57383113536767460516 -0.20991863773439561891 -1.4094745561518076116 0.39497881026913556068 -0.3789421751805266414 -3.0299573388674865271 -0.51790605641894038591;-2.8382889903501595796 -0.26890509320087774281 -1.2575311331108285362 0.072960396510568570339 -0.2462397986191451893 -28.335384259945005425 -1.5235246070944288288 3.08386831292713115 2.9949732905157868679 -0.82246234794644124122;-1.0555697137375852357 -1.0080792338564021904 0.3985028237639869908 -0.33181867685653554378 0.371236345063546469 1.9688739555020615679 0.48013972478364280727 1.0144212534131380465 0.74804390100501061411 0.10613614381334651737;-1.712524190515730238 -1.8287060401266861387 0.20902290783641647165 -0.46909512092343014222 1.4580976436489510029 1.4402683489764813718 -0.015488748244018833017 -1.8842938357613416844 -1.0465609651371754474 -0.65191503872296796551;-1.0613238609698889547 -1.3536883884460757521 0.79947999828297444669 -0.3177088894042073286 0.49222700544731978756 1.9403636793140841554 0.23998067117482285715 0.8816090685823028128 0.67211457431134591367 -0.13869916586089769961;0.031776716742017110939 -0.88354570238724594589 -0.37557983361796037913 0.31505992647815556085 0.085017163895627315129 2.6005407582937132283 -0.31010482653372162254 1.0144923456927286143 0.31601333097688827367 2.0155350849851023654];

% Layer 3
b3 = -1.3509186521356804089;
LW3_2 = [-0.40582951247721132937 -1.2108279246035049681 -13.384142376438035171 1.2394214724307268671 -0.80808071214918508751 1.1302854715914236738 -1.6969751909746431107 1.8344949636618548272 1.4300792339776668971 -13.783245258393895583];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.683263173544107;
y1_step1.xoffset = -0.138191044330597;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
