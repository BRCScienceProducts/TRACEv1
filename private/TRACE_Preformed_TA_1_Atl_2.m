function [Y,Xf,Af] = TRACE_Preformed_TA_1_Atl_2(X,~,~)
%TRACE_PREFORMED_TA_1_ATL_2 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:40.
% 
% [Y] = TRACE_Preformed_TA_1_Atl_2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999961923064171;-0.999961923064171;-39.5;0;30.0316562652588;-2.96613502502441];
x1_step1.gain = [1.00003807838574;1.00003807838574;0.0155038759689922;0.000363636363636364;0.207805673664695;0.0607333297500273];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.0218692325729206161;-0.56091177255964352888;0.15686806873596606526;1.611414498308306964;1.2130209334032115986;-1.2741672162468333784;-1.9637488837015686372;0.10443973897665918826;-0.9523516098732615065;3.2366069366236320803];
IW1_1 = [0.38478777757417292893 -1.401296927121737923 1.1881933626962659645 -0.37143745625920293607 1.1874836511739148559 -1.5257744983409260442;0.25735191984530308984 1.3293694061667484796 -0.59652539483005506682 -0.73219311875106696252 1.3620223087870373391 1.1606003922764578373;0.064398321574498554321 -0.0022415346870132799202 0.056570441394872328367 0.035095608820917355286 1.8188087732619391268 0.16738989535348816617;1.5988011258543499693 -1.2279453880491899564 1.8588350515216642833 4.3304395674637721214 -1.7801012524470403164 -0.63568537871454056098;0.35563005696073407558 0.63340754731327264526 0.3714529771415258641 0.51518393834883402516 1.8784185661700092407 -0.56169462819130278053;-0.281167212798275723 0.63697639112234105685 -0.95692379725568865734 0.51420676062657377781 0.8614054250480067676 -1.3029313465756471313;-0.15589027854754564095 0.12676828001390916256 -0.071199532540023147131 -0.72439424349764536259 0.69274595041038200538 0.094448301687258554016;0.8034032830035469086 -2.2182099029876609642 0.71946295055918874084 0.44647725256242210001 -1.5027854142505328028 1.2161409892426415791;-0.4549177148955207417 0.11130162029978117599 -0.17437524623535774482 -1.4707607040551036182 -0.19315597858255570407 0.28826658446936187508;2.9703834284673500399 1.343501554766928674 1.3077988662373936091 0.012614687211256388547 1.0209866101050601994 1.4359790184606386898];

% Layer 2
b2 = [0.46195462440010648386;-0.37674227091831397063;4.264510032367686776;1.8196248793584370862;-2.8420613167476815875;-4.7482880022954185861;-6.3950609272893839119;-0.21476683674635480004;-2.5851258016907037174;0.47772674528075154132];
LW2_1 = [1.2717688191897380534 0.1209205105672087055 0.042354335553073003962 -0.76690195895141155535 -0.15919618156603959624 -3.19710979244439919 5.4321543879860731963 -0.072634545516621920602 -1.3668240344298343558 1.4787426736975719521;-0.060624055994078628051 1.3301921126667251016 -0.90381900349088806212 1.5371116344718509517 -0.45851198312361995946 0.8510177428133917088 0.17141012146798284554 -0.8486080781001982265 3.6609665014455519128 -0.13683621516342428515;1.3632698612830880247 -2.6052895919921286172 -3.2225965605012101278 -1.7262265670039658172 0.45712258467487254521 5.7086035994242534386 -7.8257346470130357829 2.7947982370938380114 0.53395281438688324549 -1.7705375560872864682;-0.3540573225579481953 -0.26379045105238640989 -3.9887356227685799581 2.9047934825762391498 1.3731615511403691965 1.2061813081631218569 0.70283465764336328085 -3.7507166519724002285 3.6767863548355390613 3.7667245904259458733;1.3139372926419592424 1.2814292681034329391 -1.2942806781089681856 -1.3445628463096566119 -1.6405248169391799529 0.40206418688527872929 -2.841846305057650568 0.23965412753173787053 0.3675083243425703583 1.4115375428539731484;1.2760703527439203331 0.46479088821344238802 -0.91893696457242546316 -0.69457841794890762266 -0.026730050690371515154 -2.93379503459473856 -0.79812084329122578996 -0.084165113737681263029 -0.78035455060985325915 1.5317699604956998005;1.5922164322087355437 1.2182130155776720315 -2.5236290193877950472 -0.99868084934097978156 0.3546853124412762126 3.1512533383068648263 2.3141680854373305465 5.3242652515950616987 2.6674109554432465785 5.8302424079116574873;-1.7622855877365417587 -3.244320421379523367 0.39655491573082468637 1.26171237763130617 2.3185988090130154049 2.3943364110237848053 -0.85169432745813933305 1.0602893951968883623 -1.016947732397664339 -2.3833577871358806455;-3.1670191575461608124 -1.9968818172005089462 -0.46979085654787577919 1.6716075309120130843 2.8976858172371278144 -4.2952094227347776823 1.3761524004954881484 -0.69780357419157301724 1.1961064534367624734 -0.62529978259235108329;-1.1075926633809181077 -1.3941775066452146703 1.701027995700677975 1.0999740308843188874 1.8793996202279716901 0.42787523886899841985 -0.59031220865604416836 -0.19151053024555361737 -0.10635311474154136857 -1.7579791423074737633];

% Layer 3
b3 = -0.53543880204961069591;
LW3_2 = [0.34276015160011624738 -0.52109971687081146907 -0.16585333045658609552 0.010536771076365029215 -0.50791077100917914056 -0.38100147858774219278 -0.21892988648669733931 -0.015127301689529068507 -0.20363350318109757486 -0.47971720523753125232];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00331170470525242;
y1_step1.xoffset = 2032.08581542969;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
