function [Y,Xf,Af] = TRACE_EstT_Temperature_1_Other_4(X,~,~)
%TRACE_ESTT_TEMPERATURE_1_OTHER_4 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:41.
% 
% [Y] = TRACE_EstT_Temperature_1_Other_4(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999961923064171;-0.999961923064171;-77.5;0;30.0081539154053];
x1_step1.gain = [1.00003807838574;1.00003807838574;0.0119760479041916;0.000363636363636364;0.213330946207267];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.83686862886283452934;5.6482602698863004775;-3.0321143137187021033;-0.19894495230299613642;-4.0935930750821185597];
IW1_1 = [-0.073994862809780945212 -0.039217701492746309677 1.2144756697350442831 -0.15778096664746812938 -0.60895465521151548316;-0.53522411524656221538 0.5646196259665532402 -1.3335486028881178289 5.4422250785775894144 -0.033934631649819857468;-0.0046472152233574554742 0.065020469640716185844 -0.26380505611778320985 -2.6208227583610130829 -0.24083112441955073502;0.071392654040974751206 0.031511955023564831857 -1.0269505779347865015 0.13868161400953005202 -0.3507295301512631247;-2.1878181309593216497 -0.66572056688729763785 2.2796104497642355469 -2.7784951964193727036 1.3586067997635784543];

% Layer 2
b2 = [-0.75077503116684962681;-0.72527520283101543086;9.697589268304861676;-3.475095838777440882;0.67220460915290891624;3.1208835954612403896;4.4970940747829253326;2.2339178880538193006;-0.86939084179814385411;0.26284017293483302735;0.89042086870364489659;-9.8884940971675625576;3.7677366190530170442;1.6415239726539017084;1.7566885710095356821];
LW2_1 = [2.3194675321922875177 -1.0812090278169390611 -2.3267029909033243307 15.328618561963562428 4.4520518371843325056;-5.5990980392620057771 -0.51608199024860113013 10.884270554300307765 -2.8012445225327828879 0.41959795340350275472;-8.8936839648471330833 -3.5832131347927052012 1.1346304292811633108 12.663454011984590863 1.1706556131182201952;-3.7831842562354291992 0.16772128760238783074 -0.057884700390339237364 0.15551445749242931438 -0.010942792672235260309;-2.3985994695583823244 1.5773830320893238444 4.9838632925606738411 5.2428401463307405805 0.98391309295868067952;-1.1990373224540671337 -0.54902412205310247018 10.706031594217749969 -2.756881415184364581 0.26973363570970904091;5.4242154693637800733 -0.77636160586499003422 -0.55532950903598110592 0.72147482042503219279 0.028097477568826099981;-2.3525014878718075728 -2.7917305872498077157 -5.9687239349203595751 9.6845563752225771736 0.5920510648935568554;3.1499523430735871798 0.72196663803943461613 0.35224832040905901254 -0.057977233970024528997 -0.019315439370797472807;-1.816835291296793331 -0.41437092487126681029 -0.15651344984021287043 -0.24425960730555668077 0.05535900053506963292;-1.5618555947278964791 -0.012955035510572270388 13.605969236137807954 -8.721894946531627113 0.14149023448163342009;-4.4964463576854898363 -0.10780507153269239251 -5.6075163671525016795 -2.9639791530917292128 0.22481715007694294539;4.0230317563175983508 -0.081170806273052897861 0.12608078245278853124 -0.083102099845641028142 0.013778503130495858148;3.8508769332432430943 6.7076046677708092147 6.4953747629864340141 -7.1862487331796467416 -2.7834548066022204438;-0.87601718634515302053 1.1178583922728670963 2.2383095050400791948 -14.844586183543039937 -4.4577944286820754272];

% Layer 3
b3 = -1.9172772830207960304;
LW3_2 = [5.9150235465005547297 -0.9344738688330910259 0.10232558178088732581 -13.625257056306434578 0.16002750482177918734 1.0268222215304578793 -1.55965470474443757 -0.36997999497980510464 1.7867512436484809246 3.2660977962333177516 -0.6509556353984139454 -0.82941068273836904279 -12.431542451257879378 0.12825219090772096986 6.0480542501822416313];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0530989193133871;
y1_step1.xoffset = -2.99982047080994;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
