function [Y,Xf,Af] = TRACE_Preformed_Si_1_Other_2(X,~,~)
%TRACE_PREFORMED_SI_1_OTHER_2 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:39.
% 
% [Y] = TRACE_Preformed_Si_1_Other_2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999961923064171;-0.999961923064171;-77.5;0;30.1649227142334;-2.9811577796936];
x1_step1.gain = [1.00003807838574;1.00003807838574;0.0119760479041916;0.000363636363636364;0.22152510192902;0.0532708976942295];
x1_step1.ymin = -1;

% Layer 1
b1 = [-5.1019840570746533004;3.2291621667968177789;0.56153830851659247703;-1.2816810054687941545;0.63611186650689865996;1.4308433104216544685;-0.40298004950685822889;0.51544157239650789659;2.5103938619287973211;-1.0580273410288916214];
IW1_1 = [1.7671011097967288528 6.3834557018374127324 -4.9660410993084234121 4.8861732054743018949 0.36911638001453717095 13.012978999680143488;-0.23216056266678908315 0.10243269399892922233 1.703158857735155296 2.8235251696045473579 -0.5457553745820480362 0.21302991501354889836;0.030218013643238828686 -0.05865237398471472019 0.70058788081293743577 0.77475094516759335228 0.24565428679744280571 -0.088478526787063915826;0.9362902577226637213 0.80523398195591233684 0.75845687721967069983 -0.4113934873225840172 0.38602077872621426424 -0.34333469055290100069;-0.25992171729721047502 0.19142800364124917811 -0.22588647825785704293 0.7504288560235427008 -1.6738222928767112485 0.65678449974634312003;0.0094227670129075433852 -0.016120717740706929505 0.58770213079064681505 0.21657246482934472409 0.49430829040935336804 0.11117473900671390186;-1.3078428221017159849 0.01856937394802795141 2.8304752918556963515 -0.59842245779693215013 -5.6962169440825825006 -2.2240611655555060366;0.12949355284902119845 -0.12726680569396980891 1.3607638295348187807 -0.34453812542218992254 -1.1168656257703084567 -0.82400510454643416391;0.047112261787618632536 0.0085405974826649397325 1.4142196136752884783 0.29172780707445783444 6.3470813562756180914 -0.15967361960930309683;0.2828349431237258127 -0.15284372014242394999 0.80709008666814396893 -1.4611879365059110558 0.9896198970538223616 -0.90566081341311444053];

% Layer 2
b2 = [74.265444418817750716;19.525448269470224716;170.62703592702180799;-50.558173109313237603;-62.262484694766854432;69.640017598846810642;124.13455009614406777;-206.89506478960942104;16.701672816129409682;38.2116255988162834];
LW2_1 = [-92.364076673849908161 61.654757579292599701 29.774610885480196742 1.9442026405042380777 -77.310806896398091226 -126.08479168406711324 -4.2167537429898995782 -63.337281882211172501 -26.717689112570678134 -14.097517933421329417;-0.17144681557227983704 1.0923784955975317512 5.1930382456267931701 -0.28667896023865663269 3.505899944245119304 -35.076459589253268234 -0.15812030161171533593 2.7507138046367507478 4.2721928944277127727 2.7527296428142218332;-45.949344897921996278 -23.586871567916762871 104.28018782070316206 110.17976872138582678 58.256223185031778655 -10.484466846277893382 9.1185020283284305975 -126.6951136396072144 -27.283929991443056196 -7.0638188569387558857;-13.699574776093658812 50.730427397693702574 -105.24658689454902571 -21.432327000092104896 37.214848865736051664 -56.131086888075131469 -1.6568014037058726995 -54.120368595610791829 -7.6438569829554765533 168.83174975339167645;21.406107034914995779 4.4163038108554744099 -11.03100095734577657 42.605771954211249408 3.2325867153449756586 -16.071260642463524704 -28.612111216173129691 69.216530589013856911 65.039407887991245616 -33.13591470866874289;18.470821599577256222 -14.159214384071455939 -41.345174165011385981 11.256675681775856646 22.837762921897514445 74.826210270089433152 -42.631961576629308297 -74.467989367824131364 -16.377404608011051579 8.3410377517813234505;59.760501223641377067 5.5361224166484843678 5.1702611432892240373 -0.58969645572857387616 11.822352985939705405 -61.663011168634135117 -0.96072413072626172692 16.204230981842535186 -31.25724567218261285 5.181743128942537524;-3.5063853501600612539 14.08570754711167794 -81.890021280016910055 6.6427489863708872875 -84.525124206955524642 62.043663945070349541 -30.531793517100997093 161.21570044371313202 66.813423708139580981 -103.65121044213020696;96.139912631097374174 -65.535790425438264606 86.320417704503270784 -44.58881766363737853 24.555406702567061927 62.389157362234868742 3.7306434595383226593 11.679286474666630724 23.77504888169635322 97.484915369131442731;-9.9838951934579558412 22.989836710657215235 -11.696294461501357986 -32.749048978900063389 -65.569443110516260731 44.883106466424735004 -47.360652600603039275 74.922529528086130313 -148.00288098206240761 -48.689175049676833851];

% Layer 3
b3 = -0.20553472860483923412;
LW3_2 = [0.045659677906413342896 0.61851428663983676337 0.010250313058938542027 0.090336246025969776929 0.0036138767575907646684 -0.016835895140295542571 0.049611277946718594645 0.02055925848324848676 0.0046339442675632910515 -0.008065416530490775171];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0184350799221364;
y1_step1.xoffset = -0.488903820514679;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
