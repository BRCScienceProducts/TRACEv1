function [Y,Xf,Af] = TRACE_SFs_1_Other_2(X,~,~)
%TRACE_SFS_1_OTHER_2 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:41.
% 
% [Y] = TRACE_SFs_1_Other_2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999451688695;-0.999617390652097;-75.291;0;31.351;-1.9283];
x1_step1.gain = [1.00007734910688;1.00019210311383;0.014121999957634;0.0003147128245476;0.364192585038969;0.0607044754374516];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.2016306568867660687;2.5085120199150696685;0.55643433555181298633;-3.1816273045595204749;0.36989688946747190101;0.013580637779742877475;0.65484743189122063267;-2.1915866754292965268;-1.4484176414641081188;2.9575659887763414702];
IW1_1 = [-0.1505394766335781398 -3.6897595794507860312 0.11695694568100917232 1.4251993974968346635 4.1612170416403300166 -1.4477558355678328272;-2.1752504361712872161 0.99531454232322302822 -0.91432674012246728523 -1.0617184757623019387 -5.0315059816154237282 -2.1862867274746884405;-2.4389873981839245154 -0.44450423063492033871 0.11198739275697097706 0.010250457476691014064 2.6623708156840231176 -1.2280098701864203825;0.38701789806088221502 -0.43254611989531810412 1.049019901319505621 -2.1560926475136832359 0.94980126344146698081 1.619760462895651898;0.1875506503281443027 0.31494449431393145566 0.36564123975114215526 -1.3779084853384417908 -3.4102400566018324923 2.0627379721050087547;-0.34609185038538747836 -0.5722173088036714983 -1.358158395279156716 -0.23560571711718733545 1.0862586844036903333 1.5856772574951374377;0.42210966192539267627 0.61530278067851429391 1.2462086508953809094 0.36355884288605128107 -0.17132971340268057792 -0.022354382685918591789;-0.24035790772543749738 0.75785149450454392106 0.53858666184408843236 -0.38404916804617367232 3.3177640609489853496 -0.82593290019725251749;-0.3301944746165220157 -0.16850698740825811872 -1.3971299525144065257 -0.44275599128049220043 -1.4128813326190328148 -1.8953461119592696082;0.62928766488418508285 -1.2112566117504568464 -1.3784672781669651265 3.2515998378431985039 0.70686485098917595238 -3.1912845321429688106];

% Layer 2
b2 = [-1.4539705489865693;-0.85415921525400451131;1.7227202043779170637;2.0590519284128077082;0.76494033137568873126;0.62108722999015109067;0.75215670931010281119;2.8610978357161118701;7.3930589708729081977;-3.9048407915182106187];
LW2_1 = [-0.48312716600446442561 -0.56703876819930232323 -0.75280039307923185543 -0.75849116716555387008 0.055015054711017793987 0.042567550919765988204 -3.2914625869266358471 -0.3136893060220626861 -0.84641697849560981748 -0.834526778485974563;-0.34691938310117570454 -0.0044041768037709526709 -0.16489669790385547143 -0.20002279883959403484 0.42406354222385927999 0.89393207305628108461 -0.44576230406199407463 0.4305421144210332951 -0.63092571372366212934 0.47920713926873731436;0.0026373584781104637831 -0.063746782681503050272 0.12349312802087350494 -0.018847888767484638484 -0.3579249864188457364 -1.1891322187340509497 -0.65896441188192678151 0.0089743729835030615349 -0.52229275803451480353 -0.10935256164146665847;-1.1088824340085210451 0.061009775758167371362 -1.8756696478440710862 -1.7035184969247929576 2.203472628172131742 -3.4443749038308055788 -10.290931796596474612 0.83164529016858568244 -5.0219936519473140635 -1.0791021140900649566;-0.32068957410102144623 1.7859036281748328356 -0.54569253833812003673 2.804749312914581072 -0.86857717833481506986 -2.0704807333750672171 -1.9383623795504179022 -0.26500043088374852784 5.2760904551293954512 -5.3121283972873918344;-0.034638766297916928627 0.66182413924678773487 -0.1264687528572566444 0.58061490920260094839 -0.99032742222605496529 -2.8686853696749774478 -3.2504674552537764498 1.5225794829052903268 -1.1313803751940580966 -0.0066267651559606295664;0.57559293907854292005 -0.007902543289334783283 0.32101785087189405044 0.39077129782783792677 -0.40108116163163654022 -0.97482488715222093134 0.82638497639306285336 -0.98867139054464348025 0.86100358787706177122 -0.7513157049931769027;0.24404830042737174489 2.2878806650151126689 -1.8185110957185106617 -3.993379548411998492 0.37547882355288053624 0.12277767987487957224 -1.6426290144034094709 2.5980541163806920579 -2.4446602145013525131 -2.2683860228051053731;0.8247936920729793675 -6.7030569622661531071 0.67143317690245152285 -2.4168104959139280474 0.59081335291481085203 -0.76688735486330472657 0.83611087828015617784 -0.0083995020635838826134 -0.12517701904927411305 -1.5163163408334783266;-0.5019057359365006743 1.2527448414914399422 2.5672388177658191921 2.0404350541553419873 0.73013833074122069799 0.62067352234073458472 -0.11050699236267502723 -0.58960269499791451153 -1.3743123651837891863 0.43401774399507958568];

% Layer 3
b3 = -0.91047200042851716972;
LW3_2 = [-0.80950552999990732506 4.1651473652406156845 4.2541683516519741559 -0.13464470398387912153 -0.37541787321604302985 0.42106555081029772847 2.8879951026551666793 2.299163326600869528 -5.6374987735601855832 -0.46422063272926417099];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.479723223512926;
y1_step1.xoffset = -2.9999223498254;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
