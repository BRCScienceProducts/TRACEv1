function [Y,Xf,Af] = TRACE_Preformed_N_1_Atl_2(X,~,~)
%TRACE_PREFORMED_N_1_ATL_2 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:40.
% 
% [Y] = TRACE_Preformed_N_1_Atl_2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999961923064171;-0.999961923064171;-39.5;0;30.0316562652588;-2.96613502502441];
x1_step1.gain = [1.00003807838574;1.00003807838574;0.0155038759689922;0.000363636363636364;0.207805673664695;0.0607333297500273];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.2553913109864489606;2.5362356100554173111;2.3137434755724832769;-1.4427239947653476282;9.2138189505885002006;2.1029956796858364498;-0.43784802666645011859;0.75473427593065489649;-0.11248520640538982318;-5.2368204418343475837];
IW1_1 = [-0.13502993239095470446 -0.012064865657608203273 0.097477454496612159218 -0.86894522602332202599 1.0718806323732428254 0.52944450400135933954;-0.4013484694616729076 0.45616244702071867545 1.6117361143786661515 0.83798520810637955325 1.3528221242699243199 0.85422128915609008004;-0.35072630582378566677 0.41334980181638136809 1.4299503128520771877 0.84704517788270172751 1.1215041413313773244 0.69135572609557915946;-0.034170468165212561362 -0.099401228305928554518 -0.85599889819593055762 -0.6765548960159460945 -2.566072138622953247 -1.4334730911717077362;-0.14590098294543499269 0.053579020795246963538 0.11203885282452821781 7.9385920819381681213 0.060986910815184779133 -0.17584376776084145733;1.3304983611576399749 0.16020047432333861526 -0.37871664101608804032 1.1914067058113335662 -2.0741419787564607802 2.8263277618964228743;-0.22163497576544632928 -0.058918225422488409992 0.43933618595723278322 0.8765638758320518642 -1.031945190698837056 -1.2551716459693955663;-0.081094365619059707861 0.13124339606727367102 0.46974208534046862917 -0.2827348722352773791 -0.18261956235098933399 -0.91620975653198388766;-1.0975646242075727255 -0.15948750770391961762 -0.53263668621359483435 -1.1937443548528314796 1.3335188017048775766 -0.67500103075079898041;-0.23909762858643193728 -0.021625761833524263789 4.9390947435328786952 -0.27202880182567329426 2.3566309795239721581 0.016060857731706353058];

% Layer 2
b2 = [-5.8834005185329658616;-46.783770818505033162;-2.0391775941210568135;-19.519456042139196938;4.966260733717924758;11.795032779326641403;6.7968438432027511453;-8.0781731971373389456;44.714646634840114814;6.5177240245531953278];
LW2_1 = [1.8130832305026161055 0.94405253204040551207 0.85570253856466604869 1.4011425012198253093 5.6578512107367480155 0.64642823184724940155 0.51852918927242219738 1.0554538899818257658 0.04192244373889580239 2.1264743645851855725;12.149212169056337274 -1.3864256825681644525 -8.1205701235506104751 -3.4523509383708934628 50.790745230873604044 0.28664735067823959858 3.5487298354012595247 -6.7310912765273513969 -0.091645887065586545406 -4.9871872759466668867;-2.7857643285779412068 -4.4760733016909721727 3.2678657770762509216 0.52739540334452184034 6.5467519511132072907 -0.0072090176061434946275 -0.97207825002900349887 -0.98293436856459792672 0.29636163217421734872 -0.31582485805274862489;-6.4418964362415476188 17.499324554160619272 -20.719795038525557374 0.95657062572698947633 -1.2083503908113892855 -0.94860340769447071274 -1.4950556913460446573 1.2822079028997501737 -0.68895147276884305398 -25.390290206168966591;-1.7456518872267907661 1.8658704558912477811 -3.5676386906506754038 -1.170152000704072659 -4.2595546875559398003 -0.53372043697669302453 -0.50460092924334032372 -1.0578406094906656065 -0.04336360081693844265 -1.6041734645785836744;7.2933117810893204336 -11.176659507166096574 12.252719932665366187 -0.149762690775937235 -19.683368056603370633 -0.37913554766899582038 2.2528545085530380376 0.41231933352449562369 -1.1708916800060935604 -0.37565052414975530493;-2.0480687147607223864 -3.3592127491002390371 1.3860560025259349715 -1.653909662186060725 -7.0467013557977447036 -0.80606307451998182589 -0.58298285248835668426 -0.86176555668256038523 -0.031333522932196045119 -2.623930632520661721;0.11118849833761298984 -1.2464608029498012165 1.5027480759943430133 0.50396582270855549979 6.287977331461383379 0.013918787652924830694 0.012821640521840741225 -1.516796996238721329 -0.081232049565817004977 -1.1625279083239676847;7.2417489586984054029 -9.5947538547870721004 12.341136116247842125 1.1682640156296335565 1.1662775475789102231 1.4082975160244033397 3.2487433584682814391 0.60095444248718599134 0.24012547406957088225 52.321745345003705552;0.6244479219456772201 -9.1136579667779660241 5.6298415194899602554 -1.7948257499621425026 -5.9140936875909515535 -0.57804893083862729508 -0.33091598278230199837 -3.5895875684077762635 0.32723525597420566324 0.0061798480987232118355];

% Layer 3
b3 = 11.404649147113774532;
LW3_2 = [22.329226120698216107 0.26514769486586758918 -0.93195170153150497239 0.88768657490617719485 13.908304752390298731 -0.33473681032133839608 10.001438763541070642 11.584452722856218188 1.0882099195572043637 -0.66663474794404131707];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0686941773550495;
y1_step1.xoffset = -0.494993358850479;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
