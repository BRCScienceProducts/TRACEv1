function [Y,Xf,Af] = TRACE_Preformed_O_1_Atl_2(X,~,~)
%TRACE_PREFORMED_O_1_ATL_2 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:37.
% 
% [Y] = TRACE_Preformed_O_1_Atl_2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999961923064171;-0.999961923064171;-39.5;0;30.0316562652588;-2.96613502502441];
x1_step1.gain = [1.00003807838574;1.00003807838574;0.0155038759689922;0.000363636363636364;0.207805673664695;0.0607333297500273];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.8494168361989289373;-3.2617874364297141376;-1.6599466585291127174;-3.4617615936684842382;0.19932490539869324175;1.7166020693908730088;1.1741332331802454281;-1.9615081916594201417;-4.361195361390590719;3.2686353749504499788];
IW1_1 = [0.042931097464096866501 0.0041330961489729712774 0.022710859026013528045 3.1328810367615416155 0.40118411111558843762 0.17032897070586663912;-0.32231774451510886159 0.12813397172789392497 -1.992994301996884321 -1.8449416096032427159 -0.45567284687315706693 0.58604075232566044118;0.25781020368887624938 0.19866196557657206379 0.90479829972979108899 -1.7846308703415547647 1.0706313901476276484 1.946772093381544666;-0.21918080188064487102 0.038412728913488229654 -0.95893595863496716714 -3.6663343632411073969 -1.1536776385122822219 -1.0925414071649646175;0.21201222482216894316 -0.035097424126883144946 -0.18265545535261551446 -0.41775773230677065717 0.73880376033468808661 1.9997804895182103024;-0.98007493667690792627 -0.94722664584758864414 1.7590228974990951283 1.3822633365435283981 -0.19561753702013040535 1.5879704606233724373;-0.77978122613810285646 -0.85755480118033977632 1.7159319247624229554 1.3217294094929286086 -0.43881775662871186361 1.1252631487828141932;-0.2946377039194152947 0.073806951796273639888 -0.68263669600371412738 0.83840436072038515558 -1.3623805444660415098 -2.785989602558871514;-0.0061436276927248362895 -0.1040782482871386444 0.10352298063245159165 -4.8900506926681641673 -0.69818776344361044295 0.27333498706923481381;0.20620382486423946555 -0.043608520648579222889 0.57148544439935300421 1.9444698178338823968 -0.44882430792311323042 1.2672414009155656966];

% Layer 2
b2 = [12.499563720859033111;20.19087297001713921;-12.052369915128998912;-5.1003260256374192139;9.7231707894856800323;-25.812674049130798437;-4.2780714132495880619;1.6409400403496365861;-2.7632034830901095468;13.214944289231361552];
LW2_1 = [5.2485540828420393922 8.3630522344882471941 3.1039184509375998822 3.0732448993354037903 -1.2428019216468437769 3.3491352567430912046 -1.6894137356881686607 1.8486788771772244555 -2.4860811318235818135 -7.2600043609584350435;-25.95245644690309561 2.3939509291665501678 -2.6205951856540505851 -4.1939404125043084903 2.3895583786057845721 -1.853280154177108674 2.1151907442576680651 -3.0166399535731902581 -7.6938393041982946485 -1.3274912847687456718;-5.3002553025627259231 -9.3037123110516475322 2.5227271104627599918 1.3624805834957973705 1.9909995988976187942 -7.0257381680194574969 7.510318923077431208 -2.5692598737269691789 -2.4782325370804199061 10.100120260327898336;3.8419282472130817929 0.00036139295196441906244 -1.45758740723951985 0.36936401225719539543 -0.56817844302371067755 -0.26600843413630886891 0.29538116043556428281 0.16269808419823011958 0.6820723908625959675 -0.7518648492380057835;-9.5856142295635233808 -1.5451464456850396711 2.5076700382501733166 -2.7491950395379554095 -3.4780029575864159774 0.92462003106653589679 -0.35100787285678852756 -0.97380876512248504273 -0.30122341030683907892 -6.3543534709277365025;-18.390694192010531793 -30.411653077327009953 6.7127915292616506804 8.7686194008995261839 -1.2662723932372579316 4.9755047931372100578 -6.3927113196920561933 -1.7589988751327292338 -11.537102712343788369 8.8196479920601777991;4.6339597956219789054 6.1643656483150151004 3.0334807786544262243 5.0694291083525309105 -2.0935337621718090872 2.9723846683649468581 -2.3395705630016596643 0.94180165540327087648 -0.86592187062370640227 10.718300340636988111;7.437840649266107107 -0.38014879423439829065 1.300836301161974129 -0.18001829703983984743 1.5686876449619961971 4.8445921901357396067 -4.3780450931493186673 2.6403794450436484098 0.62994564647951500902 -5.566388741368315074;10.618855811088923957 -3.5707602210956435052 1.9242495720636447754 7.3380303936117652341 6.3049102924510078694 1.9679116339602196195 -3.3508290925695325413 7.7803058121732364683 -2.8378439330512739147 -7.0481098509521196149;-16.669506143214274374 -2.0257323169625260917 -3.0569169948085956889 -5.2976979330774893739 2.0984731775927452091 -1.6398040030139144907 1.054210122707254893 -0.93018800002421087036 -1.8074716284303873337 -6.2699182118817091691];

% Layer 3
b3 = 0.96282354597095920479;
LW3_2 = [-0.078313505199857302852 0.12768272541032127387 -0.082221058121963869203 1.5226210274824620861 0.17811166138970338513 -0.28039132350793116721 0.3153291635460175879 -0.098551905784130894306 -0.063891207306355821127 0.30460748075236204757];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00639021416728488;
y1_step1.xoffset = 136.002920238134;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
