function [Y,Xf,Af] = TRACE_SFs_1_Atl_3(X,~,~)
%TRACE_SFS_1_ATL_3 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:41.
% 
% [Y] = TRACE_SFs_1_Atl_3(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999025224415;-0.999999995392661;-40;0;22.805;-1.9603];
x1_step1.gain = [1.00000064853082;1.09776974554843;0.0153861540000154;0.000332778702163062;0.134898151895319;0.0611727426493303];
x1_step1.ymin = -1;

% Layer 1
b1 = [-6.0141790980895688534;-3.1384642278102661272;0.3379123333654039385;-7.9948573222214163181;-3.649398042078393356;2.3323541191089209867;-0.59080437673662344888;-0.40641582140522325428;-2.0905440017823631038;-4.2709414119953352795;-1.1085342198469243513;-3.1897973322982875466;-1.1788420655918714353;0.42911011269276400082;3.9473298753318504239];
IW1_1 = [6.9997818695060045613 5.1691746960080910966 3.8781631637913731581 2.291043008088198718 -0.99557525234518295942 -4.1503437010759913761;-0.58979969139891241792 0.41024870629499071706 7.2947048034062156319 2.1230236972108653681 -2.031735296957225767 -1.5230510647608523911;-0.50540016155841449574 0.13748111654478442634 -2.1396964717858080185 -0.52026661753216540962 2.010296648387953411 1.5083587992705949077;-9.3369681648537845575 -2.2523455506236120804 -2.2145648183077133453 -11.591738900261146838 -0.31482397432381342695 -6.7214577878747769901;-0.22296246142164380388 -0.060769563802241022277 0.29506218395952349409 0.94340594218759987744 4.3569394478759120304 -1.7083656295808209435;1.3083149432051448535 2.3134041172106596385 -4.9976716463253403333 0.081626543347294341912 2.3401215703620019681 -0.72909070522967955874;0.12331519856420045111 -1.2317183968495750701 -2.1235254043223430465 1.5348634570973758162 0.90605909244565696614 -3.8372325502597313118;-1.0534124862221296848 0.43814883683127997527 1.9697914878192508414 -0.096454097630211496628 0.29326297263401079896 1.2060280775085427951;0.13898616583031001004 0.49253500898857249801 1.2454552768954070263 -3.6035981483153172178 -0.61347331081815859033 1.4592475298042986154;-0.18731744813680450967 0.54058688248509279006 5.3676579186528909915 -3.1260513774896536709 1.071587966862277419 2.0717053531811373546;-2.7588966025257306569 -0.8868024764593471776 -1.8944205388137409507 0.90698674056694850165 -1.7024249570879013138 0.20423259910549682039;0.89617849062779519898 -1.6745491259008524754 -3.9810483760518069474 -0.44226230551435086191 -1.3010937872038399465 -0.27596928020981470464;-2.2377978202341868297 -3.1003965911790269949 -1.8460961167636125158 1.2637599872831875025 -0.47532866121317030039 -1.8171898645466513234;1.6445149318515450698 1.9057963327962630373 -0.055651119926812639416 0.32448530743332065773 2.5605234670593302049 0.86993371464975610685;0.64783171080043744361 0.09221350360079395847 -0.41681027539840548313 -1.004437010836848998 -5.7459905125989054753 1.4525453612911920498];

% Layer 2
b2 = [2.8638697931981180744;1.2879754701002197326;-2.0101551958641450391;2.6920627349186037058;-1.8174886261017340061];
LW2_1 = [-1.981570265451520596 3.9209387863475244629 2.1637202908460038131 -0.90066958848169442753 3.9284288721189852822 0.11350063957099930378 2.7951492693760231489 -0.37232049084487012225 0.68333819973015930138 -1.6474672266769070372 -0.46674112586286659043 -3.9016526512135900617 1.3641944533539132056 0.042599660552542849279 -1.2106567537527015421;-1.0331134514388402579 1.7727094850094216039 -5.0772650090017705793 -0.42275451820655346458 -4.4687848345530829519 1.0980334715266644174 -3.1379949588903608415 -1.0515832525587689439 -2.2566161048770032593 1.449244226396279922 -0.56663222134383162132 0.67816375938833894921 0.76812468087237861791 -1.5187574251220832267 0.56874440992281338758;-0.33160756867742691156 -0.43722214353720645352 0.23900039521430449518 -0.15720400151522576082 -0.78860395281384920718 -0.23220093046852371965 1.5677504256508507652 0.89341661561273766345 1.7457941874578539743 0.10584663153862061691 -1.694145175853992713 -0.32257148209423491814 0.35359035435349006615 0.86641736992001783246 -1.2984483187984541264;0.36245553614770359419 2.1005164650839676099 0.78079539488027049909 -0.36236292199655584234 -5.0721680950555674272 -4.5088851390706272682 -1.1594736448530580386 -0.99701543694111272043 -2.6812918859982244335 -3.1804998597445695019 -2.1649468113381185042 0.86026662988145985445 -0.075788351008650445273 4.8711853688789066297 -3.6528762958228062629;-0.36863703827849686467 -0.75446235960478780225 0.31591182516466703722 -0.31274371646388865464 0.39036525138537947477 -0.33510539279448248173 2.2420310016892193161 2.1629515872190903103 1.6429513263730002315 0.24138352383820438352 -1.0603821161106898874 -0.61187314057808472878 0.69606114232109539408 1.2826493041952786722 -0.1139828528469700869];

% Layer 3
b3 = -0.25508708905945604029;
LW3_2 = [0.32572285497768072027 -0.18503285093414029161 -0.69512227209046351106 0.54455490697940656108 0.52285922803905671152];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.481947690293183;
y1_step1.xoffset = -2.9999223498254;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
