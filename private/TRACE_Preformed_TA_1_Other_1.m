function [Y,Xf,Af] = TRACE_Preformed_TA_1_Other_1(X,~,~)
%TRACE_PREFORMED_TA_1_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:40.
% 
% [Y] = TRACE_Preformed_TA_1_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999961923064171;-0.999961923064171;-77.5;0;30.1649227142334;-2.9811577796936];
x1_step1.gain = [1.00003807838574;1.00003807838574;0.0119760479041916;0.000363636363636364;0.22152510192902;0.0532708976942295];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.3112705770986641252;-5.1520238693279365449;0.98328710115742434805;2.012749083547232587;1.2153797395200880427;-16.302406227643967185;0.34419310899744448573;-2.4264525320949190679;0.54777052465283959659;-5.8202873548528275549;-2.2834246129716642137;2.6065139717945209341;-1.1798797628855401953;-0.79039901991813277249;0.79967487712693963164;1.0157685863883871846;0.48193204907068526444;-0.64657769601256276371;0.76587802678087946173;-1.1355272084717358272];
IW1_1 = [-3.8699366082859971705 4.0138165699460319757 -0.30346665059772937045 5.4660828536545453815 13.127227052177017796 -1.4424178953465145447;-0.0039076684942318546528 -0.15939748942902573492 -1.8306779799884227433 -2.4470938753057396298 2.1521728803107871286 -2.0977270824444191888;0.13458166003226637586 -0.1881695644147856894 0.34554960291761005475 0.80665705978818413868 -0.48351183474381687066 -0.56345942708786322939;0.082908532359358036445 -0.12033726045895401513 0.44410879342748271759 1.7337196034075652573 -1.3085375619297745509 0.12792544023579113799;-0.22672026472104556127 0.12266960258930811878 -0.32260824742966165424 1.5733225897225691092 0.28309542150134492378 0.037660410493773527341;1.748912216373613937 -3.5105919860390115694 -3.9940742588359623433 -6.9745876935028707777 14.741435737571158882 -4.3031071966891047964;0.01852061590624111409 -0.21140627405284764806 0.1393304842441895619 0.62588504617442530797 0.4792015196088945661 -0.36772555476033563782;-2.5672857087542562127 2.9545567502228076151 -0.64571538963856967008 -2.203756318092355837 1.4167470054533710666 0.68373641394628059675;-2.4055278931632497752 0.17763485114535257359 -0.77667033945460084432 -1.3836183747499724017 -3.3980454047391801531 1.1729322588170751906;-0.37285262358797316429 0.60766743868283235042 -0.96201775839634273702 -0.017434605303995674708 20.388346534358618101 -6.2879472920786048107;-0.015651260086228989399 -0.27300423960944170121 -0.96421228489363830505 -2.182954878991870018 -5.4368062524808165037 -0.71096731984770389356;0.084203968122217837111 -0.57056550120190918651 0.9557301560174242816 1.5444174720486025798 0.64203446113230622228 -1.338909745053931788;0.5427300693978721613 -0.12510001696417144545 0.30866211542166582804 -2.5464034972945919222 3.9920877912382892738 0.70424905685267913391;0.0096692381744487715389 0.2396634734423922497 -0.42814130340619444004 -1.0050618777256361547 -0.14028622848707431037 0.97334547418972483523;0.06351104916620585461 -0.14220936183619473092 0.26976493177395771683 0.63331151603145174889 -0.20738212675914499683 -0.55202609626029908174;2.8626077047883207172 0.58172841265846975123 4.479795121894974308 -1.2710904910029710013 4.5876993080976848915 -6.7225594467152056666;-0.028412924075081828768 -0.20085833869299021814 0.002159443441672335897 0.68980349528840767537 0.79234518166419287688 -0.37194286263449005681;-0.089829342427939370963 -0.068608383999597913339 -0.71690084525470065824 -0.46810317222493763589 0.92548139659977513016 -0.18095609461969641707;-0.2217452045616199463 0.033663446374207338374 -0.35602917325738131504 1.7381234100670468479 -0.71514057148787435469 -0.52851243608570386279;0.013959057656073213527 0.050691445816680925918 -0.093398746575174371176 -0.72022466164064691263 0.26162164975008633805 0.43616830909136067307];

% Layer 2
b2 = 0.32913471542125599667;
LW2_1 = [0.0032520110837905074827 0.19522830057658865921 -8.8490776452617136982 1.2930796290076969068 0.93950561810735078172 0.049872904098526502081 -6.6817808105375595673 -0.0081609683764394327921 0.019065017891660304694 -0.041720770243833117663 0.069956979320046880355 -0.89519160827340327202 -0.12428742964282132877 2.4622218699938880349 22.151637407964933857 -0.016529573689392371844 4.8717501869177564089 0.3647834926818307455 -0.96611672549765104101 9.303916780989181845];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00351113753226865;
y1_step1.xoffset = 2059.216796875;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
