function [Y,Xf,Af] = TRACE_EstT_Temperature_1_Atl_2(X,~,~)
%TRACE_ESTT_TEMPERATURE_1_ATL_2 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:41.
% 
% [Y] = TRACE_EstT_Temperature_1_Atl_2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999961923064171;-0.999961923064171;-39.5;0;30.0000762939453];
x1_step1.gain = [1.00003807838574;1.00003807838574;0.0155038759689922;0.000363636363636364;0.206927881437043];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.1219067184970827888;-0.46474766771373193786;4.8453766783259597517;1.3148158293430236565;-7.620268766633051527;4.3756119421798471691;2.0814834044995018658;-3.5584240968903229074;1.0496981831444529565;-6.119907414190367767];
IW1_1 = [0.1140259180607834516 -0.75201451010968800581 2.3565001517213639559 1.0100793224793607195 0.18867829768717730987;0.017917026690888456647 -0.019421675416648926521 0.0863401263986929568 0.058882978014948614276 -0.77897557684981644233;-0.62315225493299319925 -0.29944389027408441217 -0.17730371575620010316 3.1855292215576347381 -3.4252140952277549957;-0.39071862493109804637 0.74401690659464780886 -1.4127282307100941239 1.4355798552272232005 -0.22885122069870814099;-0.33803892557532411178 -0.083217088678848485928 1.0499041662097075012 -6.7871955904306444651 0.61763058513422941509;0.19122953341644963188 -0.061635660326712041202 0.36139583562645483106 4.8970270805276268078 -0.30172705326855431274;0.32181418599453259777 -0.54803758835397620164 -3.2589983749268993662 -0.57904322398787222426 -0.19139842943676896314;-3.8237958867612551472 -0.790761716793749736 -0.79489720440837718929 -7.6159719309254514386 -0.030614271955072346054;-0.24012034067831070083 0.61392938594311630141 -2.4321411964749488632 -1.2946565024733511784 -0.2991675242568538895;-0.098224141507195453227 -0.20417700303444286103 0.050829506148695309531 -5.9196255046259578236 -0.086022461542677869373];

% Layer 2
b2 = [-1.3602707198437895553;0.71959138018442581064;-0.96953385476339237758;0.99076195682828516187;2.0755121596759775748;-5.4591241362156202044;-64.406160937605932304;-8.3441918608633649512;2.748516190302820128;-34.402324303554294715];
LW2_1 = [5.4295283223478740808 -2.7287859918704251427 -0.10516859152959136259 0.85238036908918590751 -3.6242022757187513093 -0.17461813797831371442 -3.0414065040471212065 0.3945989799294116751 4.317678733487515963 -0.088147187358472975371;-0.97214842140093571388 -3.6100565581666157478 -0.58652699859651080683 -0.20846873174030045028 -0.87749168080280515181 3.0770212970371386696 -1.0946752955334793089 0.16646009702802661012 -0.78367342689213559392 4.4074155571163684542;0.69989218603416714082 -4.1564757835397276864 -1.6890796078421981274 -0.017571796921069686437 -0.78714324313034778058 1.5124110699442923078 -0.92544624022871835312 0.1714430981716410507 0.72906123134842504285 0.29656535531643019032;4.5645482079256511909 3.338634405289906848 2.2734448278009762312 0.68528597555989245738 0.47050480167839353607 -0.12368983829743358804 -2.1302641197855392008 0.23948251486855748338 4.0059224476833694695 -0.91198217637816048065;-1.0655017721975297285 -7.7646298932282098448 -8.8422716774759138048 -0.16166199110366824554 -4.6048327040710201885 3.2709697069606020747 3.1690093460252928281 -0.56947821559951972148 0.47196220448499870415 5.4958100797001581128;9.8602621573614648298 7.7710190880384129031 3.838650737732328011 2.1982331624232882561 -4.3851368503911771768 -2.4155750649638711991 -0.36766415761056797651 -0.63108948876148485141 8.8119547611759880823 -4.8820093992385427129;-3.0723661598791229821 9.3926483175551229721 1.5535223393671182546 -6.2810969744934377346 -5.6532388468496304057 -24.037820562441421401 67.639299372168778746 -2.3091906205525991602 -19.366989683935905475 -8.2989383197354129607;-0.63696615256427391305 3.9204900631023869018 -0.26575575045171023758 -1.9046891633861648963 0.038031159795162500226 -6.107911745133822734 4.8867132697919517526 1.8536844071960467684 -3.2217290398592259848 -4.6224617534796905716;2.1267049260068215943 -3.4876117321215578393 -1.2120769056911946393 1.8611837347932980169 -0.86722203278059306619 5.3465923339680934134 -0.98500290900326314958 0.071488480637626528047 3.3044779938321089396 3.8338495638156642187;-5.2479551580926830923 4.8231133138848214514 -0.85224429054567574227 -0.6356939690032682444 12.781684691573156343 -2.3038709680158935278 50.941801974383906781 0.52672045577103376868 -13.685549923170043485 -11.412069865140837877];

% Layer 3
b3 = 9.675973051275608583;
LW3_2 = [0.36252700023742856494 -0.49063622269030171541 0.51193741874169829131 -0.64901362904389203745 -0.18619327999470244861 -0.05458021697516333981 0.59117287677106189481 7.8668725950610518538 -1.7944394402519350251 0.1282294257542351823];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0596262898164022;
y1_step1.xoffset = -2.99982047080994;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
