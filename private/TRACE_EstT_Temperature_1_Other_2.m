function [Y,Xf,Af] = TRACE_EstT_Temperature_1_Other_2(X,~,~)
%TRACE_ESTT_TEMPERATURE_1_OTHER_2 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:41.
% 
% [Y] = TRACE_EstT_Temperature_1_Other_2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999961923064171;-0.999961923064171;-77.5;0;30.0081539154053];
x1_step1.gain = [1.00003807838574;1.00003807838574;0.0119760479041916;0.000363636363636364;0.213330946207267];
x1_step1.ymin = -1;

% Layer 1
b1 = [-5.6679246220072387885;-2.7257301316752124976;3.4427138933370229346;1.6901840288309057936;-0.19893124775558623796;3.7042546072198083706;-0.44054468227564075322;-1.5555300673517382659;-17.646032991843270565;-3.1477251188202255427];
IW1_1 = [1.3591019210169641429 0.8118130976293163048 3.9317905570084858979 -3.4690629460989339528 -0.58344190069213297534;0.84758922350930832046 -0.55421249809696271349 1.7146392691786676021 -1.548314590958125736 -0.61191231079446950503;0.5471516671970437784 -0.56007493925278006852 1.602630820507706888 3.2755009424198053836 -0.71058458672885527196;0.12951815756735707286 0.1579778601274535732 -0.62751284749440050525 1.2898243052821278809 -4.1540339316470848985;-2.8182405058525490382 -2.2961799927955102163 2.4028340198842319531 -0.51286251059487264481 -1.5291373860512516014;0.13733148991752658352 -0.14545562431421169003 0.88440555246968688419 4.7872602292968409188 -0.15812422145106283522;0.75811501071976739041 -0.7128803730315461662 0.68389467666875192187 -1.405691562899024083 0.79735586931971424995;-0.050367561832616633555 0.1085049795144589907 -4.5806953183707141974 1.096740553212226521 0.30401279448481632883;-0.60622938072228016448 0.67216192869360535944 6.7799919043616494463 -19.133832719434181513 1.1514944362489514251;-1.059708937254170813 1.1562142117113807238 5.7408912040724464632 -0.97154932560742102154 0.77411220637559008395];

% Layer 2
b2 = [-105.20930959961748385;-9.6638329297194704992;2.6516880779920373179;-8.5030272074757551337;-3.382590669953945639;-0.079382154851492317538;0.56718450001897358081;-6.1748103340517310755;-0.56339951023606005265;-8.1141368792276047373];
LW2_1 = [-34.359278906475744009 13.300244735728474765 -0.79117445510579231804 -0.5007370409502712727 0.40036558777511066509 -0.27174102389126980617 -0.30815415458656525427 3.5981702486509457017 -75.891576068348967965 -4.6616600530046277129;-1.2889055201751986601 -4.9627456590589673624 0.67668045635092310963 4.7578721793040070764 -1.3153128150962063447 -1.9249557208091689908 0.8314570700806033221 3.4554908132036108448 -0.47316726055558477881 5.0234584544415472607;-0.23508650952103340992 0.74634795821902499835 -2.0543897247149507379 0.68775939339128644434 -0.039840810974887549967 0.44043249681814661267 0.1466591433422336499 0.15291858730299265345 -0.24380060670328071448 -0.504402311552983873;-0.16568926988600599093 -7.3557841777710262221 -0.66353894563990489797 -0.22603056011847577622 -0.12911949432838298879 -0.34016688903542990907 0.66260622676163405398 -0.023546297799335185602 -0.87247608327375769655 -0.29382691919928799473;-6.9987687855210385379 4.0743817766541292613 -3.0000362737363701626 3.1752273558421779676 -1.6054714919455330691 1.7358250901424805424 -0.17737367311023707894 -1.3802903539267126209 1.4077792168604252865 1.6347427881116765036;-2.7563699986686427401 1.626235572761628001 -0.39292908006112814423 -2.0002317890423881863 -0.47951674983619951842 -0.67544717575683077548 -0.40505363400467686574 -1.328818248439290528 0.55510171511543349165 -0.58864462799769234902;0.096499158037201562821 -0.78274071148998058955 2.2015443210991874068 -2.0700285518899752546 -0.36374411055489719313 -0.49655025193877389 -2.4775784988358724448 -0.60348391400724887834 -0.028432866147626710551 -1.453916673347679156;0.0082797803703277862708 1.8947548463050438716 -0.8328829444548343508 1.119799499699099643 0.11241153104433709853 -6.4723754727254316776 0.72070254749198048305 -1.6294672523401783071 0.40274334980880188706 -0.073040600888585188732;-0.18197579653890347262 -0.15944001189479747871 0.28671389019933579689 -0.76417736684371717626 -0.082764859933238038581 -0.39623132849351661022 -0.52762487744474162454 -0.4832063940211061559 0.15188327160169637353 0.66416401405633984645;0.73232627925423654514 -8.6702830943214994619 0.12848426656571412807 -0.29175243985328208618 -0.14239248734910328609 -0.94016505259633054159 -0.44366444319141579156 -0.91668327576929886646 -0.19528963754246653206 0.559470203209088357];

% Layer 3
b3 = -0.6382357389317048213;
LW3_2 = [-0.22597205023086158748 -0.1561472039203642137 1.112555700052322738 0.37897174315325199423 -0.052689531451075286017 0.14862134362046461322 0.16194073576833731276 0.75832255913537027769 0.91369937668059852953 -0.37370013844653499069];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0530989193133871;
y1_step1.xoffset = -2.99982047080994;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
