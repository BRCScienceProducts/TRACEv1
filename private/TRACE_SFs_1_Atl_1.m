function [Y,Xf,Af] = TRACE_SFs_1_Atl_1(X,~,~)
%TRACE_SFS_1_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:41.
% 
% [Y] = TRACE_SFs_1_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999025224415;-0.999999995392661;-40;0;22.805;-1.9603];
x1_step1.gain = [1.00000064853082;1.09776974554843;0.0153861540000154;0.000332778702163062;0.134898151895319;0.0611727426493303];
x1_step1.ymin = -1;

% Layer 1
b1 = [-8.6236351116861467148;-3.5848248715710564483;3.2421382098592230747;-1.4650700741702440411;5.1569392251259991156;7.9046158046653713924;2.8321478892257756499;-6.7413664579939398536;-4.1201199544768858374;1.4792440647301601242;-0.36849556076798989368;0.54698420333536745819;0.15660933096106430251;-0.55640514983653688308;3.6290771646086756874;-0.74030754871375359372;-4.4085607068112953044;2.0882552654007970894;2.8850873193113515391;1.6279302978096967802];
IW1_1 = [2.8705166177310976749 1.0090136149452646475 0.26272252954921521129 -2.1129122512874376483 3.2615060956917396595 -1.5934121644920948846;1.7772792382095647934 -2.5113086109441709048 -1.860087417361441231 -0.60136346434200504962 0.57452143537042210664 1.2730305471541829565;-1.6375842542911704935 1.9826410788672503838 1.5509947284071141649 0.82403253910218610123 -0.42801708868923343809 -0.82295399777952538134;0.44746424690848451977 1.1160975547256297702 4.8646604829707271733 2.5749539459866483959 -0.64174102139799560351 0.80419690358888440418;-0.76724910653609690314 -1.2350290301725783682 1.2960000323269262879 7.893438395409371644 0.25740201229770071079 -1.3204688484217927957;-8.3185171525918164548 3.939307627486662966 -3.1124565664081869087 0.38861474837280590711 1.8049746529295029873 2.6662583185269563835;-0.82522432525738320663 2.1804769775944010668 -3.5757689295760970438 3.6685161079014925178 2.0959783779681870897 -4.8728025905780594229;0.69420299414478647826 1.2735989868509729472 -1.320381130177033624 -8.5660649783578346472 1.1834289859421602831 0.72396383393841123866;0.42240781914534125674 0.22756182307560127165 2.8831672278247184593 -3.9045979310200431556 -1.5476848653423533886 0.87794295872214489496;1.4358000771226351322 -0.54190066599055997099 -1.0130359883411315103 -1.1030213323429067795 -1.3550863317500043692 0.87487441884821748328;-0.16006287209973449337 0.52717791447422979179 -0.22540613445649290703 0.55844163907706712013 0.18026435558411327276 -0.79777023366951482775;0.41804359406734115101 -0.40834147276607063448 0.74305362338963298896 -0.32393284865958238417 -1.0698078356698079716 0.069440721206220551442;1.5803176305150072878 -0.54520233536431028654 0.2574536529555505604 -0.2995066694228664117 -1.2054670994211180712 -0.091614359804496753314;2.9560631008106175166 -1.4099026258600104722 1.3129112428167428739 1.2935463073654986932 2.73587824766286003 4.4706891627372966624;-0.34046858369327964722 -0.06461422106245115482 -3.3849720928219295679 3.2760930998085600052 1.8814510412618044022 -1.1898594350241149531;-1.7682466294638536919 0.042589509851482097724 0.6072326559554831471 -0.41539929788574292413 0.011900123184322595679 1.0373134176583067578;-0.73158781265992023357 0.080081592111640870213 5.6879466172424635317 0.85547059922854951086 -1.7198060089476616685 -3.2614305314353493337;-0.24839417880702691077 -0.7652823359882231502 -3.5424205972865969727 -1.6942990849387176144 -0.47069019816186918881 -0.13716207356501039505;0.022011028947912781445 2.9716180028180385619 -0.3459047952451612673 -0.18101072128592005095 -0.8536594561611972054 -1.5468402108363035197;0.49423239854570166774 -0.37577221167127328183 -1.8754487378753630367 -1.2347286811405260298 -1.6575859116678348659 -0.40780946487207248019];

% Layer 2
b2 = 0.43876026901962150717;
LW2_1 = [1.0673142811515519135 -2.3333181347708809028 -3.5451944609656140805 1.7126989556321940977 2.2775261179250505528 0.15084565502292726635 -0.11878895844400347293 2.0781980830987185627 -4.8967697243738221857 2.7062659844573309087 2.895279465637170091 2.969401834456979028 -2.8609429712438143589 0.32158113326116877229 -4.726179504157411948 -1.2074409016080041024 0.62505849710511651729 3.6980328975061480534 0.49371453616443944368 -2.3088323745492180805];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.481947690293183;
y1_step1.xoffset = -2.9999223498254;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
