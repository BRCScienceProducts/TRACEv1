function [Y,Xf,Af] = TRACE_Preformed_N_1_Other_2(X,~,~)
%TRACE_PREFORMED_N_1_OTHER_2 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Aug-2024 10:13:40.
% 
% [Y] = TRACE_Preformed_N_1_Other_2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999961923064171;-0.999961923064171;-77.5;0;30.1649227142334;-2.9811577796936];
x1_step1.gain = [1.00003807838574;1.00003807838574;0.0119760479041916;0.000363636363636364;0.22152510192902;0.0532708976942295];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.5631945346671156649;2.8988641559266050685;1.8188856004576214875;3.3039095108887188701;1.192590080666454222;0.40384078956260049953;-0.16613097745509688985;4.4581215389857824505;0.061085994331050344486;1.5202824611763994245];
IW1_1 = [-1.0347080578122165306 -2.3286657272453790135 -2.0422083688868819529 -0.66979591495976509297 1.9432140351274131973 -2.5715017111278859474;0.18337726853926594739 0.23741235437209581849 1.254462892722244316 0.15277879700784111061 4.2469311835669243393 1.7725907837693590796;0.030980578867913301927 -0.088714492078733594993 -0.47507506805800125971 -0.73076813490270120521 -0.80803143552968748065 2.5847640747559821328;0.28563943358410887052 0.18052819735913080978 2.5324688990298072078 0.65398452527872652507 0.2599514700636087472 0.30707160920632053935;0.0099232994089615816219 -0.11006217260350230347 -0.30161359443986202056 -0.71174732269228535575 -1.5736700688826530392 1.7838556586249620928;-0.011062344829079886338 -0.012240433238167021043 -0.1068285007045168683 0.69065186418091517595 0.51535783414758595811 -1.3237474968462761282;-0.60997818909814482957 -1.0020851558617018817 2.1938664589326490884 -0.3284456849052355687 -0.65174675139989590722 -1.4779082807147640999;3.6228657437456526225 -3.2867457192392373067 -6.7202005904972805794 -3.4526470504117776628 3.7938823103962082683 -0.51849493382272016095;-0.14786161985869503144 -0.27927297849605342561 0.53648839869026354599 0.30676429213932532303 0.19423554878938212309 -0.90952170819833921822;0.68507205935489901005 0.74694491929986372991 0.69766927820297330864 0.30787365581279474425 -0.40592309062865067348 -0.086270802295412798988];

% Layer 2
b2 = [2.7894259896395370291;0.18742460463677929061;4.554910268762532688;-5.3329775654816247155;-4.7373538215597204015;-5.5217679187803998531;6.5271875622755581858;-2.4265577554406569938;-4.2430684492923465001;-2.9636337845737439345];
LW2_1 = [-2.1784159851036100086 -0.26332057232451100415 1.2329071457351725716 1.5207110030294130887 -0.89916549549489366289 1.8113035270372750407 -0.86809491261571269938 -0.46331424407849786107 0.12390642432539986095 -2.4279395444399476389;-8.676314550700464423 -7.7386208399796601043 -0.23885693777416022732 -1.2361799592946316473 -1.4090767527350511745 13.350990212271304003 1.6246695565428823649 0.27416668137100952407 -3.9678451079127565748 5.2522542853196059198;1.2123855204558233734 -0.0075288957252715440691 -0.55576797880678885377 -2.489772691450211628 0.057247365052228167681 0.29305764076570522958 -0.074088346643398694802 -0.4211279337552882307 -0.98194626620227742908 -1.940552805202609532;-1.1106450212365548413 0.092963253312485963353 -0.89405853315319661068 2.8830404707775678652 1.1198325702264206871 -0.39761161916306103636 0.38239981325611949181 0.44349493015273439012 0.68826270205089978838 2.4073165655474304536;2.6441883764962561543 0.1833263195517687294 4.4264690895626150891 0.41797969634309267706 -4.1463259641393008792 -2.3167161375008347157 0.22777772708556251469 0.3356555658553090904 1.5902710376914304113 2.0980468066525794768;-1.700483991667927075 -0.99343650090215496196 3.2123924078289762818 5.9887932730983397533 -1.1477818605039935562 -3.8406077952310284651 0.56304055050483403644 -0.23014863399216647921 2.3044047112551293566 0.55854244504285388562;1.0817081118603431023 -0.6334380986826366744 -0.53752542297603944643 5.0924407229491608362 -6.0820452559823801053 -3.2622539585554211072 -2.2216746433618337342 -0.72303266530589549443 2.5326674922154941427 -4.8716717980564263613;0.73396848864064556661 -0.49159944342319522592 0.94755961025071933079 -2.419030197996431486 0.80089019880827716502 -1.3817809926998374515 1.2243734058164121858 0.54186991387646932239 -0.99310260882120837689 3.0670160327830040536;-0.15667908192735524597 1.6923611977922061733 4.484138262566455424 -0.21389854138473410328 -4.3740351161528714385 -0.50265599269415006667 -0.30926106074581016792 2.8698057360938977745 0.31280391765352583144 -1.0450752796753808305;0.40924300505274213702 1.2354553590356269765 -0.50092530875390617329 -1.6930579066615341066 1.973191705395860307 -2.324519507530071305 3.2885402227697451139 1.3290609977334040259 -3.7034611997068234146 -0.2715224098055326607];

% Layer 3
b3 = -0.251890638029031666;
LW3_2 = [-1.598520292736507864 0.084508462354538169126 -4.4775795650018768157 -4.5444515964502292249 -0.96734372355301556645 0.28728537733431019907 -0.50934107304399034444 -1.2061039449393780032 -0.83154622042431614037 -0.16840020072873587709];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0553271360105305;
y1_step1.xoffset = -0.497560739517212;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
